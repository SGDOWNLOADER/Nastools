name: Releases Builder
on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:         
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
           python-version: '3.10.11'

      - name: Init Environment-Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo ("NASTOOL_CONFIG=D:/a/Nastools/Nastools/config/config.yaml") >> $env:GITHUB_ENV
          echo $env:NASTOOL_CONFIG
        shell: pwsh

      - name: Init Environment-Linux
        if: ${{ runner.os == 'Linux'}}
        run: |
          echo ("NASTOOL_CONFIG=/home/runner/work/Nastools/Nastools/config/config.yaml") >> $env:GITHUB_ENV
          echo $env:NASTOOL_CONFIG
        shell: pwsh
        
      - name: Init Environment-Macos
        if: ${{ runner.os == 'macos' }}
        run: |
          echo ("NASTOOL_CONFIG=/Users/runner/work/Nastools/Nastools/config/config.yaml") >> $env:GITHUB_ENV
          echo $env:NASTOOL_CONFIG
        shell: pwsh
    
      - name: Install your Dependencies
        run: |
          pip install nuitka==1.9.7 imageio==2.33.1
          pip install -r requirements.txt

      - name: Package with Nuitka-Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
            copy .\package\rely\upx.exe c:\hostedtoolcache\windows\python\3.10.11\x64\Scripts
            copy .\third_party.txt .\package
            copy .\package\rely\template.jinja2 c:\hostedtoolcache\windows\Python\3.10.11\x64\lib\site-packages\setuptools\_vendor\pyparsing\diagram
            xcopy .\web c:\hostedtoolcache\windows\python\3.10.11\x64\lib\site-packages\web\ /e
            xcopy .\config c:\hostedtoolcache\windows\python\3.10.11\x64\lib\site-packages\config\ /e
            xcopy .\db_scripts c:\hostedtoolcache\windows\python\3.10.11\x64\lib\site-packages\db_scripts\ /e
            python -m nuitka --enable-plugin=upx --upx-binary=c:\hostedtoolcache\windows\python\3.10.11\x64\Scripts\upx.exe --output-filename=nas-tools.exe run.py
        shell: pwsh
          
      - name: Build Executable with Nuitka-Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          cp ./third_party.txt ./package/
          cp ./package/rely/template.jinja2 /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/setuptools/_vendor/pyparsing/diagram/
          cp -r ./web/. /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/web/
          cp -r ./config/. /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/config/
          cp -r ./db_scripts/. /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/db_scripts/
          python -m nuitka --standalone --show-memory --show-progress --onefile --enable-plugin=upx --upx-binary='./package/rely/upx'  --output-filename='nas-tools.linux.amd64' run.py
        shell: pwsh

      - name: Build Executable with Nuitka-Macos
        if: ${{ runner.os == 'macos' }}
        run: |
          cp -r ./third_party.txt ./package/
          cp ./package/rely/template.jinja2 $Python_ROOT_DIR/lib/python3.10/site-packages/setuptools/_vendor/pyparsing/diagram/
          cp -r ./web/. $Python_ROOT_DIR/lib/python3.10/site-packages/web/
          cp -r ./config/. $Python_ROOT_DIR/lib/python3.10/site-packages/config/
          cp -r ./db_scripts/. $Python_ROOT_DIR/lib/python3.10/site-packages/db_scripts/
          python -m nuitka --onefile --show-memory --show-progress --onefile --macos-app-icon='./package/nas-tools.ico' --output-filename='nas-tools.macos' run.py
        shell: bash
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
           name: ${{ runner.os }} Build
           path: |
              ./nas-tools.exe
              ./nas-tools.linux.amd64
              ./nas-tools.macos

            
