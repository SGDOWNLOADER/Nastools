name: Releases Builder
on:
  workflow_dispatch:
  push:
    branches:
      - dev
    paths:
      - .github/workflows/build-package.yml


jobs:         
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
           python-version: '3.10.11'

      - name: Init Environment-Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo ("NASTOOL_CONFIG=D:/a/Nastools/Nastools/config/config.yaml") >> $env:GITHUB_ENV
          echo ("LANG=zh_CN.UTF-8") >> $env:GITHUB_ENV
          echo $env:NASTOOL_CONFIG:LANG
        shell: pwsh

        
      - name: Init Environment-Macos
        if: ${{ runner.os == 'macos' }}
        run: |
          echo ("NASTOOL_CONFIG=/Users/runner/work/Nastools/Nastools/config/config.yaml") >> $env:GITHUB_ENV
          echo $env:NASTOOL_CONFIG
        shell: pwsh
    
      - name: Install your Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka==1.9.7 imageio==2.33.1 wheel
          git clone --depth=1 -b dev https://github.com/SGDOWNLOADER/Nastools --recurse-submodule
          cd Nastools
          pip install -r requirements.txt

      - name: Package with Nuitka-Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
            copy .\package\rely\upx.exe  ${{ env.Python_ROOT_DIR }}\Scripts
            copy .\third_party.txt .\package
            copy .\package\rely\template.jinja2  ${{ env.Python_ROOT_DIR }}\lib\site-packages\setuptools\_vendor\pyparsing\diagram
            xcopy .\web  ${{ env.Python_ROOT_DIR }}\lib\site-packages\web\ /e
            xcopy .\config  ${{ env.Python_ROOT_DIR }}\lib\site-packages\config\ /e
            xcopy .\db_scripts  ${{ env.Python_ROOT_DIR }}\lib\site-packages\db_scripts\ /e
            python -m nuitka --show-memory --show-progress --show-scons --follow-imports --enable-plugin=upx --windows-icon-from-ico=.\package\nas-tools.ico --output-filename=nas-tools.exe run.py
        shell: pwsh

      - name: Build Executable with Nuitka-Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          echo "NASTOOL_CONFIG=/home/runner/work/Nastools/Nastools/config/config.yaml" >> $GITHUB_ENV
          echo $env:NASTOOL_CONFIG
          echo "LANG=zh_CN.UTF-8" >> $GITHUB_ENV
          echo $env:LANG
          sudo apt-get install locales -y
          sudo localedef -c -f UTF-8 -i zh_CN zh_CN.UTF-8
          cp ./package/rely/upx ${{ env.Python_ROOT_DIR }}/Scripts
          cp ./package/rely/template.jinja2 ${{ env.Python_ROOT_DIR }}/lib/python3.10/site-packages/setuptools/_vendor/pyparsing/diagram/
          cp -r ./web/. ${{ env.Python_ROOT_DIR }}/lib/python3.10/site-packages/web/
          cp -r ./config/. ${{ env.Python_ROOT_DIR }}/lib/python3.10/site-packages/config/
          cp -r ./db_scripts/. ${{ env.Python_ROOT_DIR }}/lib/python3.10/site-packages/db_scripts/
          cp -r ./app/. ${{ env.Python_ROOT_DIR }}/lib/python3.10/site-packages/app/
          python -m nuitka --standalone --show-memory --show-progress --onefile --include-package=sqlalchemy --include-package-data=cn2an --include-package-data=zhconv --include-data-files=./third_party.txt=third_party.txt --nofollow-import-to=app.sites.siteuserinfo,app.mediaserver.client,app.message.client,app.indexer.client,app.downloader.client,app.plugins.modules,app.plugins.modules._autosignin --enable-plugin=upx --linux-icon='./package/nas-tools.ico' --output-filename='nas-tools.linux.amd64'  run.py
        shell: pwsh

      - name: Build Executable with Nuitka-Macos
        if: ${{ runner.os == 'macos' }}
        run: |
          cp -r ./third_party.txt ./package/
          cp ./package/rely/template.jinja2 $Python_ROOT_DIR/lib/python3.10/site-packages/setuptools/_vendor/pyparsing/diagram/
          cp -r ./web/. $Python_ROOT_DIR/lib/python3.10/site-packages/web/
          cp -r ./config/. $Python_ROOT_DIR/lib/python3.10/site-packages/config/
          cp -r ./db_scripts/. $Python_ROOT_DIR/lib/python3.10/site-packages/db_scripts/
          python -m nuitka --standalone --show-memory --show-progress --onefile --macos-create-app-bundle --macos-app-icon='./package/nas-tools.ico' --output-filename='nas-tools.macos' run.py
        shell: bash
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
           name: ${{ runner.os }} Build
           path: |
              ./nas-tools.exe
              ./nas-tools.linux.amd64
              ./nas-tools.macos

  Create-release_Send-message:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v3

    - name: Release version
      id: release_version
      run: |
        app_version=$(cat version.py |sed -ne "s/APP_VERSION\s=\s'v\(.*\)'/\1/gp")
        echo "app_version=$app_version" >> $GITHUB_ENV
    - name: Download exe and rename
      uses: actions/download-artifact@v3
    - name: get release_informations
      shell: bash
      run: |
        pwd
        ls -all
        mkdir releases
        mv ./Windows\ Build/nas-tools.exe ./releases/nastool_win_v${{ env.app_version }}.exe
        mv ./Linux\ Build/nas-tools.linux.amd64 ./releases/nastool_linux_amd64_v${{ env.app_version }}
        mv ./macOS\ Build/nas-tools.macos ./releases/nastool_macos_v${{ env.app_version }}
    - name: Create release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.app_version }}
        release_name: v${{ env.app_version }}
        body: ${{ github.event.commits[0].message }}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: dwenegar/upload-release-assets@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
        assets_path: |
            /home/runner/work/Nastools/Nastools/releases/
            
